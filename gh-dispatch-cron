// worker name: gh-dispatch-cron
const USER = "heinrich-gif";
const REPO = "traderspost-bot";
const WORKFLOW = "scan.yml";     // Pfad/Name in .github/workflows/
const REF = "main";              // Branch

async function triggerGithub(env) {
  const url = `https://api.github.com/repos/${USER}/${REPO}/actions/workflows/${WORKFLOW}/dispatches`;
  const resp = await fetch(url, {
    method: "POST",
    headers: {
      "Accept": "application/vnd.github.v3+json",
      "Authorization": `Bearer ${env.GH_TOKEN}`,
      "User-Agent": `${USER}-bot`
    },
    body: JSON.stringify({ ref: REF })
  });
  if (!resp.ok) {
    const txt = await resp.text();
    throw new Error(`GitHub ${resp.status}: ${txt}`);
  }
}

function inUsExtendedUTC(d = new Date()) {
  const wd = d.getUTCDay();           // 0=So..6=Sa
  if (wd === 0 || wd === 6) return false;
  const m = d.getUTCHours()*60 + d.getUTCMinutes();
  // Pre 08:00–13:30, RTH 13:30–20:00, After 20:00–24:00 + 00:00–02:00
  return (m >= 8*60 && m < 24*60) || (m >= 0 && m < 2*60);
}

export default {
  async fetch(request, env) {  // optionaler manueller Trigger per Browser
    if (request.method !== "GET" && request.method !== "HEAD")
      return new Response("Method not allowed", { status: 405 });
    if (!inUsExtendedUTC()) return new Response("outside_session", { status: 204 });
    try { await triggerGithub(env); return new Response("✅ triggered", { status: 200 }); }
    catch (e) { return new Response(String(e), { status: 500 }); }
  },
  async scheduled(event, env, ctx) { // CRON-Trigger
    if (!inUsExtendedUTC()) return;
    ctx.waitUntil(triggerGithub(env));
  }
};
